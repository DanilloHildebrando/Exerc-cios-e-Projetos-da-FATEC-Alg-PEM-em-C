 //Código Base para o Projeto Agenda de Amigos
#include <stdio.h>
#include <string.h>
#include <stdbool.h>
#include <locale.h>
#include <stdlib.h>
struct ficha{
	char nome[40];
	char telefone[20];
};


int procurar(char procurado[], struct ficha vetor[], int num_fichas)
{
    
	int i;
		for(i=0; i<num_fichas; i++)
		{
	    //Ignorando Maiusculas/Minusculas:
			  //if(strcasecmp(procurado, agenda[i].nome) == 0)
			if(strcmp(procurado, vetor[i].nome) == 0)
			{
			    printf("\n\nO telefone de %s é %s\n",
			    vetor[i].nome, vetor[i].telefone);
			    //depois de achar nao preciso procurar mais
			    return i;
			  }
			}
			  printf("\n\nNome não encontrado\n");
			  return -1;
}




int main()
{
	struct ficha agenda[100];
	int fichas_existentes = 0, proxima = 0, resultado;
	char opcao[10]="0"; 
        setlocale(LC_ALL, "Portuguese");
	while(opcao[0] != '5')
	{
		printf("\nEntre com a opção desejada:\n");
		printf("\n1) Inserir ficha:");
		printf("\n2) Procurar por nome:");
		printf("\n3) Listar toda a base:");
		printf("\n4) Excluir por nome:");
		printf("\n5) Sair\n\n");
		gets(opcao);
		if(opcao[0] == '1') //inserir
		{
			printf("\nEntre com um nome:");
			gets(agenda[proxima].nome);
			printf("\nEntre com um telefone:");
			gets(agenda[proxima].telefone);
			fichas_existentes++;
			proxima++;
		}
		if(opcao[0] == '2') //procurar
		{
			
		char procurado[40];
	    printf("\nEntre com o nome procurado:");
	    gets(procurado);
		resultado =	procurar(procurado, agenda, fichas_existentes);
		printf("%d\n ",resultado);
			
		}
		if(opcao[0] == '3') //listar tudo
		{
			printf("\n\n");
			int i;
			for(i=0; i<fichas_existentes; i++)
			{
			    printf("O telefone de %s é %s\n",
			      agenda[i].nome, agenda[i].telefone);
			}
			if(fichas_existentes == 0)
				printf("A base de dados está vazia!\n");
		}
		if(opcao[0] == '4') //excluir	
		{
		    int x;
			char procurado[40];
	        printf("\nEntre com o nome procurado:");
	        gets(procurado);
		    resultado =	procurar(procurado, agenda, fichas_existentes);
			printf("\n\nConfirma que o telefone de %s, que é %s, será removido? Digite 1 para sim e 0 para não\n", agenda[resultado].nome, agenda[resultado].telefone);
			scanf("%i", &x);
			    if(x == 1)
			    {
			    int j;
			    for(j=resultado+1; j<fichas_existentes; j++)
			    {
					agenda[j-1] = agenda[j];
			    }
			    fichas_existentes--;
			    proxima--;
			    } else if(x != 1) printf("\n\nO contato não foi excluído\n");
			
		}
		}
	
}



/*int procurar(char procurado[], struct ficha vetor[], int num_fichas)
{
    if(num_fichas== 0) return -1;
    if(strcmp(procurado, vetor[num_fichas-1].nome) == 0) return num_fichas-1;
    return procurar (procurado, vetor, num_fichas - 1);
}*/
